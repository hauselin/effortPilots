geom_quasirandom(data = na.omit(avg_dotMotion), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(1), shape = 95, size = 6) +
geom_errorbar(aes(ymin = dotMotion_acc - ci, ymax = dotMotion_acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
labs(x = "options presented", col = "participant id", y = "accuracy")
plot_dotMotionACC
plot_dotMotionACC <- ggplot(grandavg_dotMotion$dotMotion_acc, aes(as.factor(dotMotion_nDots), dotMotion_acc)) +
geom_quasirandom(data = na.omit(avg_dotMotion), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(1), shape = 95, size = 6) +
geom_errorbar(aes(ymin = dotMotion_acc - ci, ymax = dotMotion_acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "accuracy")
plot_dotMotionACC
plot_dotMotionRT <- ggplot(grandavg_dotMotion$dotMotion_rt, aes(as.factor(dotMotion_nDots), dotMotion_rt)) +
geom_quasirandom(data = na.omit(avg_dotMotion), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(1), shape = 95, size = 6) +
geom_errorbar(aes(ymin = dotMotion_rt - ci, ymax = dotMotion_rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "rt")
plot_dotMotionRT
plot_grid(plot_dotMotionACC, plot_dotMotionRT, nrow = 2)
ggsave("./Figures/dotMotion_acc_rt.jpg", height = 10, width = 7)
data_dst
save.image("analysis_pilot1.RData")
filesinDir <- list.files("./Pilot1 Data", full.names = T) # get relative paths to all files/directories in raw data folder
filesinDir
filesToRead <- filesinDir[grep(pattern = "belief.csv", x = filesinDir)] # find matching files to read
length(filesToRead)
#### read all data into R ####
dataBeliefRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) # read all matching files and store in a list
dataBeliefRaw
dataBeliefRaw <- tbl_dt(rbindlist(dataRaw)) # convert that list of dataframe to one dataframe
dataBeliefRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) # read all matching files and store in a list
dataBeliefRaw <- tbl_dt(rbindlist(dataBeliefRaw)) # convert that list of dataframe to one dataframe
dataBelief <- copy(dataBeliefRaw) # make a copy of the data
dataBelief
dataBelief <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) # read all matching files and store in a list
dataBelief <- tbl_dt(rbindlist(dataBeliefRaw)) # convert that list of dataframe to one dataframe
dataBelief <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) # read all matching files and store in a list
dataBelief <- tbl_dt(rbindlist(dataBelief)) # convert that list of dataframe to one dataframe
dataBelief
ggplot(dataBelief, aes(resp))
ggplot(dataBelief, aes(y = resp))
ggplot(dataBelief, aes(y = resp)) +
geom_quasirandom(alpha = 0.2, dodge = 1, size = 0.6)
ggplot(dataBelief, aes(y = resp)) +
geom_boxplot()
ggplot(dataBelief, aes(y = resp)) +
geom_point()
ggplot(dataBelief, aes(resp)) +
geom_point()
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 0.2, dodge = 1, size = 0.6) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(1)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(1)) +
scale_colour_viridis_d(begin = 0, end = 0.5)
avg_dstChoice <- data_dst[, .(choiceLowHighEffort = mean(choiceLowHighEffort, na.rm = T), rt = mean(rt, na.rm = T)), by = .(participant, trialType)]
avg_dstChoice
grandavg_dstChoice <- seWithin(data = avg_dstChoice, measurevar = c("choiceLowHighEffort", "rt"), withinvars = c("trialType"), idvar = "participant")
plot_dstChoice <- ggplot(grandavg_dstChoice$choiceLowHighEffort, aes(trialType, choiceLowHighEffort)) +
geom_quasirandom(data = avg_dstChoice, alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = choiceLowHighEffort - ci, ymax = choiceLowHighEffort + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
scale_x_discrete(labels = c("10 vs 100 dots", "10 vs 500 dots", "100 vs 500 dots")) +
labs(x = "options presented", col = "participant id", y = "higher effort option chosen (proportion)\n(lower = more effort avoidant)")
plot_dstChoice
plot_dstChoiceRT <- ggplot(grandavg_dstChoice$rt, aes(trialType, rt)) +
geom_quasirandom(data = avg_dstChoice, alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = rt - ci, ymax = rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_x_discrete(labels = c("10 vs 100 dots", "10 vs 500 dots", "100 vs 500 dots")) +
labs(x = "options presented", col = "participant id", y = "choice rt")
plot_dstChoiceRT
plot_grid(plot_dstChoice, plot_dstChoiceRT, nrow = 2)
ggsave("./Figures/dst_choice_choiceRT.jpg", height = 10, width = 7)
avg_dotMotion <- data_dst[, .(dotMotion_acc = mean(dotMotion_acc, na.rm = T), dotMotion_rt = mean(dotMotion_rt, na.rm = T)), by = .(participant, dotMotion_nDots)]
avg_dotMotion
grandavg_dotMotion <- seWithin(data = na.omit(avg_dotMotion), measurevar = c("dotMotion_acc", "dotMotion_rt"), withinvars = c("dotMotion_nDots"), idvar = "participant")
plot_dotMotionACC <- ggplot(grandavg_dotMotion$dotMotion_acc, aes(as.factor(dotMotion_nDots), dotMotion_acc)) +
geom_quasirandom(data = na.omit(avg_dotMotion), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = dotMotion_acc - ci, ymax = dotMotion_acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "accuracy")
plot_dotMotionACC
plot_dotMotionRT <- ggplot(grandavg_dotMotion$dotMotion_rt, aes(as.factor(dotMotion_nDots), dotMotion_rt)) +
geom_quasirandom(data = na.omit(avg_dotMotion), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = dotMotion_rt - ci, ymax = dotMotion_rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "rt")
plot_dotMotionRT
plot_grid(plot_dotMotionACC, plot_dotMotionRT, nrow = 2)
ggsave("./Figures/dotMotion_acc_rt.jpg", height = 10, width = 7)
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 1, size = 2) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5))
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 1, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5))
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 1, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9) +
```
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 1, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9)
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 1, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9))
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9))
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
# stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9))
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
# stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback")
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback")
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback")
dataBelief
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback", y = 'rating')
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'sd', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback", y = 'rating')
dataBelief
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
# stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = '', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback", y = 'rating')
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = '', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback", y = 'rating')
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = '', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback", y = 'rating')
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', size = 3, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = '', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback", y = 'rating')
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback", y = 'rating')
dataBelief
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
# stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback (no deception yet!)", y = 'rating')
ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
# stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback (no deception yet!)", y = 'rating')
plot_belief
plot_belief <- ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
# stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback (no deception yet!)", y = 'rating')
ggsave("./Figures/belief_noDeception.jpg", height = 7, width = 7)
plot_belief <- ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
# stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback (no deception yet!)", y = 'rating', col = 'participant id')
plot_belief
ggsave("./Figures/belief_noDeception.jpg", height = 7, width = 7)
filesinDir <- list.files("./Pilot1 Data", full.names = T) # get relative paths to all files/directories in raw data folder
filesToRead <- filesinDir[grep(pattern = "dotMotionForced.csv", x = filesinDir)] # find matching files to read
length(filesToRead)
#### read all data into R ####
dataBelief <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) # read all matching files and store in a list
filesinDir <- list.files("./Pilot1 Data", full.names = T) # get relative paths to all files/directories in raw data folder
filesToRead <- filesinDir[grep(pattern = "dotMotionForced.csv", x = filesinDir)] # find matching files to read
length(filesToRead)
#### read all data into R ####
dataForcedChoice <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) # read all matching files and store in a list
dataForcedChoice <- tbl_dt(rbindlist(dataForcedChoice)) # convert that list of dataframe to one dataframe
dataForcedChoice
dataForcedChoice
dataForcedChoice
dataForcedChoice2 <- select(dataForcedChoice, participant, effortLevel, nDots, coherence, acc, rt, ratingConfidence_resp, ratingEffort_resp)
dataForcedChoice2
dataForcedChoice2
dataForcedChoice2[, .(acc = mean(acc, na.rm = T), rt = mean(rt, na.rm = T),
confidence = mean(confidence, na.rm = T), effort = mean(effort, na.rm = T)),
by = .(participant, nDots)]
avg_forcedChoice <- dataForcedChoice2[, .(acc = mean(acc, na.rm = T), rt = mean(rt, na.rm = T),
confidence = mean(ratingConfidence_resp, na.rm = T), effort = mean(ratingEffort_resp, na.rm = T)),
by = .(participant, nDots)]
avg_forcedChoice
ratingEffort_resp
avg_forcedChoice
avg_forcedChoice <- dataForcedChoice2[, .(acc = mean(acc, na.rm = T), rt = mean(rt, na.rm = T),
confidence = mean(ratingConfidence_resp, na.rm = T), effort = mean(ratingEffort_resp, na.rm = T)),
keyby = .(participant, nDots)]
avg_forcedChoice
grandavg_forcedChoice <- seWithin(data = na.omit(avg_forcedChoice), measurevar = c("acc", "rt", "confidence", "effort"), withinvars = c("nDots"), idvar = "participant")
grandavg_forcedChoice
grandavg_forcedChoice
plot_forcedChoiceACC <- ggplot(grandavg_forcedChoice$acc, aes(as.factor(nDots), acc)) +
geom_quasirandom(data = na.omit(avg_dotMotion), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = acc - ci, ymax = acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "accuracy")
plot_forcedChoiceACC
grandavg_forcedChoice
randavg_forcedChoice$acc
grandavg_forcedChoice$acc
plot_forcedChoiceACC <- ggplot(grandavg_forcedChoice$acc, aes(as.factor(nDots), acc)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = acc - ci, ymax = acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "accuracy")
plot_forcedChoiceACC
grandavg_forcedChoice
plot_forcedChoiceACC <- ggplot(grandavg_forcedChoice$acc, aes(as.factor(nDots), acc)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = acc - ci, ymax = acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.2, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "accuracy")
plot_forcedChoiceACC
plot_forcedChoiceRT <- ggplot(grandavg_forcedChoice$rt, aes(as.factor(nDots), rt)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = rt - ci, ymax = rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "rt")
plot_forcedChoiceRT
plot_grid(plot_forcedChoiceACC, plot_forcedChoiceRT, nrow = 2)
plot_forcedChoiceACC <- ggplot(grandavg_forcedChoice$acc, aes(as.factor(nDots), acc)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = acc - ci, ymax = acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.2, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "accuracy (forced choice)")
plot_forcedChoiceACC
plot_forcedChoiceRT <- ggplot(grandavg_forcedChoice$rt, aes(as.factor(nDots), rt)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = rt - ci, ymax = rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "rt (forced choice)")
plot_forcedChoiceRT
plot_grid(plot_forcedChoiceACC, plot_forcedChoiceRT, nrow = 2)
ggsave("./Figures/forcedChoice_acc_rt.jpg", height = 10, width = 7)
plot_forcedChoiceConfidence <- ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = confidence - ci, ymax = confidence + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.2, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "confidence (forced choice)")
plot_forcedChoiceConfidence
scale_y_continuous(breaks = 1:9, limits = c(1, 9) +
plot_forcedChoiceConfidence
plot_forcedChoiceConfidence <- ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = confidence - ci, ymax = confidence + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "confidence (forced choice)")
ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant)))
ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6)
ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = confidence - ci, ymax = confidence + ci), position = position_dodge(0.5), width = 0, size = 1.1)
ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = confidence - ci, ymax = confidence + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9))
ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = confidence - ci, ymax = confidence + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "confidence (forced choice)")
plot_forcedChoiceConfidence <- ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = confidence - ci, ymax = confidence + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "confidence (forced choice)")
plot_forcedChoiceConfidence
plot_forcedChoiceEffort <- ggplot(grandavg_forcedChoice$effort, aes(as.factor(nDots), effort)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = effort - ci, ymax = effort + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "effort (forced choice)")
plot_forcedChoiceEffort
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 2)
ggsave("./Figures/forcedChoice_confidence_effort.jpg", height = 10, width = 7)
save.image("analysis_pilot1.RData")
avg_dstChoice <- data_dst[, .(choiceLowHighEffort = mean(choiceLowHighEffort, na.rm = T), rt = mean(rt, na.rm = T)), by = .(participant, trialType)]
avg_dstChoice
grandavg_dstChoice <- seWithin(data = avg_dstChoice, measurevar = c("choiceLowHighEffort", "rt"), withinvars = c("trialType"), idvar = "participant")
plot_dstChoice <- ggplot(grandavg_dstChoice$choiceLowHighEffort, aes(trialType, choiceLowHighEffort)) +
geom_quasirandom(data = avg_dstChoice, alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = choiceLowHighEffort - ci, ymax = choiceLowHighEffort + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
scale_x_discrete(labels = c("10 vs 100 dots", "10 vs 500 dots", "100 vs 500 dots")) +
labs(x = "options presented", col = "participant id", y = "higher effort option chosen (proportion)\n(lower = more effort avoidant)")
plot_dstChoice
plot_dstChoiceRT <- ggplot(grandavg_dstChoice$rt, aes(trialType, rt)) +
geom_quasirandom(data = avg_dstChoice, alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = rt - ci, ymax = rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_x_discrete(labels = c("10 vs 100 dots", "10 vs 500 dots", "100 vs 500 dots")) +
labs(x = "options presented", col = "participant id", y = "choice rt")
plot_dstChoiceRT
plot_grid(plot_dstChoice, plot_dstChoiceRT, nrow = 2)
ggsave("./Pilot1 Figures/dst_choice_choiceRT.jpg", height = 10, width = 7)
avg_dotMotion <- data_dst[, .(dotMotion_acc = mean(dotMotion_acc, na.rm = T), dotMotion_rt = mean(dotMotion_rt, na.rm = T)), by = .(participant, dotMotion_nDots)]
avg_dotMotion
grandavg_dotMotion <- seWithin(data = na.omit(avg_dotMotion), measurevar = c("dotMotion_acc", "dotMotion_rt"), withinvars = c("dotMotion_nDots"), idvar = "participant")
plot_dotMotionACC <- ggplot(grandavg_dotMotion$dotMotion_acc, aes(as.factor(dotMotion_nDots), dotMotion_acc)) +
geom_quasirandom(data = na.omit(avg_dotMotion), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = dotMotion_acc - ci, ymax = dotMotion_acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "accuracy")
plot_dotMotionACC
plot_dotMotionRT <- ggplot(grandavg_dotMotion$dotMotion_rt, aes(as.factor(dotMotion_nDots), dotMotion_rt)) +
geom_quasirandom(data = na.omit(avg_dotMotion), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = dotMotion_rt - ci, ymax = dotMotion_rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "rt")
plot_dotMotionRT
plot_grid(plot_dotMotionACC, plot_dotMotionRT, nrow = 2)
ggsave("./Pilot1 Figures/dotMotion_acc_rt.jpg", height = 10, width = 7)
filesinDir <- list.files("./Pilot1 Data", full.names = T) # get relative paths to all files/directories in raw data folder
filesToRead <- filesinDir[grep(pattern = "belief.csv", x = filesinDir)] # find matching files to read
length(filesToRead)
#### read all data into R ####
dataBelief <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) # read all matching files and store in a list
dataBelief <- tbl_dt(rbindlist(dataBelief)) # convert that list of dataframe to one dataframe
plot_belief <- ggplot(dataBelief, aes(task, resp)) +
geom_quasirandom(alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
# stat_summary(fun.y = mean, geom = 'point', shape = 95, size = 6, position = position_dodge(0.5)) +
# stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0, size = 1.1, position = position_dodge(0.5)) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "degree of belief in task accuracy feedback (no deception yet!)", y = 'rating', col = 'participant id')
plot_belief
ggsave("./Pilot1 Figures/belief_noDeception.jpg", height = 7, width = 7)
filesinDir <- list.files("./Pilot1 Data", full.names = T) # get relative paths to all files/directories in raw data folder
filesToRead <- filesinDir[grep(pattern = "dotMotionForced.csv", x = filesinDir)] # find matching files to read
length(filesToRead)
#### read all data into R ####
dataForcedChoice <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) # read all matching files and store in a list
dataForcedChoice <- tbl_dt(rbindlist(dataForcedChoice)) # convert that list of dataframe to one dataframe
dataForcedChoice2 <- select(dataForcedChoice, participant, effortLevel, nDots, coherence, acc, rt, ratingConfidence_resp, ratingEffort_resp)
avg_forcedChoice <- dataForcedChoice2[, .(acc = mean(acc, na.rm = T), rt = mean(rt, na.rm = T),
confidence = mean(ratingConfidence_resp, na.rm = T), effort = mean(ratingEffort_resp, na.rm = T)),
keyby = .(participant, nDots)]
avg_forcedChoice
grandavg_forcedChoice <- seWithin(data = na.omit(avg_forcedChoice), measurevar = c("acc", "rt", "confidence", "effort"), withinvars = c("nDots"), idvar = "participant")
plot_forcedChoiceACC <- ggplot(grandavg_forcedChoice$acc, aes(as.factor(nDots), acc)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = acc - ci, ymax = acc + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.2, 1.1)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "accuracy (forced choice)")
plot_forcedChoiceACC
plot_forcedChoiceRT <- ggplot(grandavg_forcedChoice$rt, aes(as.factor(nDots), rt)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = rt - ci, ymax = rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "rt (forced choice)")
plot_forcedChoiceRT
plot_grid(plot_forcedChoiceACC, plot_forcedChoiceRT, nrow = 2)
ggsave("./Pilot1 Figures/forcedChoice_acc_rt.jpg", height = 10, width = 7)
plot_forcedChoiceConfidence <- ggplot(grandavg_forcedChoice$confidence, aes(as.factor(nDots), confidence)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = confidence - ci, ymax = confidence + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "confidence (forced choice)")
plot_forcedChoiceConfidence
plot_forcedChoiceEffort <- ggplot(grandavg_forcedChoice$effort, aes(as.factor(nDots), effort)) +
geom_quasirandom(data = na.omit(avg_forcedChoice), alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = effort - ci, ymax = effort + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = 1:9, limits = c(1, 9)) +
labs(x = "dots (always 5% motion coherence)", col = "participant id", y = "effort (forced choice)")
plot_forcedChoiceEffort
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 2)
ggsave("./Pilot1 Figures/forcedChoice_confidence_effort.jpg", height = 10, width = 7)
avg_dstChoice <- data_dst[, .(choiceLowHighEffort = mean(choiceLowHighEffort, na.rm = T), rt = mean(rt, na.rm = T)), by = .(participant, trialType)]
avg_dstChoice
grandavg_dstChoice <- seWithin(data = avg_dstChoice, measurevar = c("choiceLowHighEffort", "rt"), withinvars = c("trialType"), idvar = "participant")
plot_dstChoice <- ggplot(grandavg_dstChoice$choiceLowHighEffort, aes(trialType, choiceLowHighEffort)) +
geom_quasirandom(data = avg_dstChoice, alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = choiceLowHighEffort - ci, ymax = choiceLowHighEffort + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1.0), limits = c(-0.1, 1.1)) +
scale_x_discrete(labels = c("10 vs 100 dots", "10 vs 500 dots", "100 vs 500 dots")) +
labs(x = "options presented", col = "participant id", y = "higher effort option chosen (proportion)\n(lower = more effort avoidant)")
plot_dstChoice
plot_dstChoiceRT <- ggplot(grandavg_dstChoice$rt, aes(trialType, rt)) +
geom_quasirandom(data = avg_dstChoice, alpha = 1, dodge = 0.5, size = 2, aes(col = as.factor(participant))) +
geom_point(position = position_dodge(0.5), shape = 95, size = 6) +
geom_errorbar(aes(ymin = rt - ci, ymax = rt + ci), position = position_dodge(0.5), width = 0, size = 1.1) +
scale_x_discrete(labels = c("10 vs 100 dots", "10 vs 500 dots", "100 vs 500 dots")) +
labs(x = "options presented", col = "participant id", y = "choice rt")
plot_dstChoiceRT
plot_grid(plot_dstChoice, plot_dstChoiceRT, nrow = 2)
ggsave("./Pilot1 Figures/dst_choice_choiceRT.jpg", height = 10, width = 7)
plot_grid(plot_dstChoice, plot_dstChoiceRT, nrow = 2)
plot_grid(plot_dotMotionACC, plot_dotMotionRT, nrow = 2)
plot_belief
plot_grid(plot_forcedChoiceACC, plot_forcedChoiceRT, nrow = 2)
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 2)
plot_grid(plot_dstChoice, plot_dstChoiceRT, nrow = 2)
plot_dstChoice
plot_dstChoiceRT
plot_dotMotionACC
plot_dotMotionRT
plot_belief
plot_forcedChoiceACC
plot_forcedChoiceRT
plot_forcedChoiceConfidence
plot_forcedChoiceEffort
plot_dstChoice
plot_dstChoiceRT
plot_dotMotionACC
plot_dotMotionRT
plot_belief
plot_forcedChoiceACC
plot_forcedChoiceRT
plot_forcedChoiceConfidence
plot_forcedChoiceEffort
plot_forcedChoiceConfidence
plot_forcedChoiceEffort
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 2)
plot_forcedChoiceConfidence
plot_forcedChoiceEffort
?plot_grid
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 2)
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 2, rel_widths = 1)
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 2, rel_widths = 1, rel_heights = 2)
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 2, rel_widths = 1, rel_heights = 10)
plot_grid(plot_forcedChoiceConfidence, plot_forcedChoiceEffort, nrow = 1)
plot_dstChoice
plot_dstChoiceRT
plot_dotMotionACC
plot_dotMotionRT
plot_dotMotionRT
plot_belief
avg_forcedChoice
plot_forcedChoiceACC
plot_forcedChoiceRT
plot_forcedChoiceConfidence
plot_forcedChoiceEffort
save.image("analysis_pilot1.RData")
